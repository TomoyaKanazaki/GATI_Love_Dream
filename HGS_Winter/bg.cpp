//========================================
//
//シューティングアクション[bg.cpp]
//Author：森川駿弥
//
//========================================
#include "bg.h"
#include "renderer.h"
#include "manager.h"
#include "texture.h"

//========================================
//マクロ定義
//========================================
#define BG_FIRST	"data/texture/bg100.png"

//========================================
//静的メンバ変数
//========================================
LPDIRECT3DTEXTURE9 CBg::m_pTexture = NULL;	//テクスチャのポインタ

//========================================
//コンストラクタ
//========================================
CBg::CBg()
{
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);	//位置
	m_aTexV = 0.0f;							//テクスチャ座標の開始位置(V値)
}

//========================================
//デストラクタ
//========================================
CBg::~CBg()
{

}

//========================================
//背景生成
//========================================
CBg *CBg::Create(void)
{
	//CBullet型のポインタ
	CBg *pBg = NULL;

	//テクスチャのポインタ
	CTexture *pTexture = CManager::GetTexture();

	if (pBg == NULL)
	{//pBgがNULLの時
		//弾の生成
		pBg = new CBg;

		//初期化
		pBg->Init();

		//テクスチャ割り当て
		pBg->BindTexture(pTexture->Regist(BG_FIRST));
	}

	//ポインタを返す
	return pBg;
}

//========================================
//初期化
//========================================
HRESULT CBg::Init(void)
{
	//初期化
	if (FAILED(CObject2D::Init()))
	{// 失敗を返す
		return E_FAIL;
	}

	//成功を返す
	return S_OK;
}

//========================================
//終了
//========================================
void CBg::Uninit(void)
{
	//終了
	CObject2D::Uninit();
}

//========================================
//更新
//========================================
void CBg::Update(void)
{
	//背景の頂点座標
	SetVertexBg();
}

//========================================
//描画
//========================================
void CBg::Draw(void)
{
	//描画
	CObject2D::Draw();
}

//========================================
//位置設定
//========================================
void CBg::SetPosition(D3DXVECTOR3 pos)
{
	m_pos = pos;
}

//========================================
//位置取得
//========================================
D3DXVECTOR3 CBg::GetPosition(void)
{
	return m_pos;
}